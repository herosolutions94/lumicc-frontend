{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/lumicc/lumicc/src/helpers/api.jsx\";\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet project_url = '';\nlet project_ap_url = '';\nlet hostname = window.location.hostname;\n\nif (hostname === 'localhost') {\n  project_url = 'http://localhost:3000/'; // project_ap_url = process.env.REACT_APP_SITE_API_DOMAIN;\n\n  project_ap_url = \"https://lumicc.com/lumicApi/\";\n} else if (hostname === 'lumicc.herosolutions.com.pk') {\n  project_url = \"https://lumicc.herosolutions.com.pk/\";\n  project_ap_url = \"https://lumicc.herosolutions.com.pk/lumicc-api/\";\n} else if (hostname === 'lumicc.com' || hostname === 'www.lumicc.com') {\n  project_url = \"https://lumicc.com/\";\n  project_ap_url = \"https://lumicc.com/lumicApi/\";\n} else {\n  project_url = \"https://lumicc.herosolutions.com.pk/\";\n  project_ap_url = \"https://www.lumicc.com/lumicc-api/\";\n}\n\nconst headers = {\n  \"Content-Type\": \"application/json\" // Authorization: token,\n\n};\nexport function metaTags(page) {\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: page.page_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"title\",\n      content: page.meta_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"description\",\n      content: page.meta_description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"canonical\",\n      href: project_url + page.page_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:url\",\n      content: project_url + page.page_url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:title\",\n      content: page.meta_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:description\",\n      content: page.meta_description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:type\",\n      content: \"website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:site_name\",\n      content: page.site_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      property: \"og:image\",\n      content: page.site_thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\nexport function getSiteImages(path) {\n  return project_url + path;\n}\nexport function checkPattern(string, pattern) {\n  // Allow A-Z, a-z, 0-9 and underscore. Min 1 char.\n  var re = /^[a-zA-Z0-9_]+$/;\n  return pattern.test(string);\n}\nexport async function postData(method, data) {\n  let parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let u;\n  parameters === null ? u = project_ap_url + method : u = project_ap_url + method + \"/\" + parameters;\n  return axios.post(u, data, {\n    headers: headers\n  }).then(res => {\n    return res.data;\n  });\n}\nexport function getYoutubeVideoId(url) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[2].length === 11 ? match[2] : null;\n}\nexport function short_text(text) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;\n\n  if (text.length > length) {\n    let str = text.substring(0, length);\n    return str + \"...\";\n  } else {\n    return text;\n  }\n}\nexport function checkUrl(url) {\n  if (!/^https?:\\/\\//i.test(url)) {\n    url = 'http://' + url;\n  }\n\n  return url;\n}\nexport function getServerImage(path) {\n  let image = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (image === null || image === '') {\n    return project_ap_url + \"assets/images/no-image.svg\";\n  } else {\n    if (type == null || type === '') {\n      return project_ap_url + path + image;\n    } else {\n      if (fileExtension(image) === 'svg') {\n        return project_ap_url + path + image;\n      } else {\n        return project_ap_url + path + type + image;\n      } // console.log(type);\n\n    }\n  }\n}\nexport function getServerVideo(path) {\n  let image = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (image === null || image === '') {\n    return project_url + \"videos/404.mp4\";\n  } else {\n    if (type == null || type === '') {\n      return project_ap_url + path + image;\n    } else {\n      if (fileExtension(image) === 'svg') {\n        return project_ap_url + path + image;\n      } else {\n        return project_ap_url + path + type + image;\n      } // console.log(type);\n\n    }\n  }\n}\nexport function fileExtension(filename) {\n  return filename.split('.').pop();\n}\nexport async function getData(method) {\n  let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let u;\n  parameters === null ? u = project_ap_url + method : u = project_ap_url + method + \"/\" + parameters;\n  const token = localStorage.getItem(\"token\");\n  let result;\n  const response = await fetch(u, {\n    method: \"get\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  });\n  const data = await response.json();\n  return data;\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/lumicc/lumicc/src/helpers/api.jsx"],"names":["Helmet","axios","project_url","project_ap_url","hostname","window","location","headers","metaTags","page","page_name","meta_title","meta_description","page_url","site_name","site_thumbnail","getSiteImages","path","checkPattern","string","pattern","re","test","postData","method","data","parameters","u","post","then","res","getYoutubeVideoId","url","regExp","match","length","short_text","text","str","substring","checkUrl","getServerImage","image","type","fileExtension","getServerVideo","filename","split","pop","getData","token","localStorage","getItem","result","response","fetch","Authorization","json"],"mappings":";AACA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAA/B;;AACA,IAAIA,QAAQ,KAAK,WAAjB,EAA8B;AAC1BF,EAAAA,WAAW,GAAG,wBAAd,CAD0B,CAE1B;;AACAC,EAAAA,cAAc,GAAG,8BAAjB;AACH,CAJD,MAKK,IAAIC,QAAQ,KAAK,6BAAjB,EAAgD;AACjDF,EAAAA,WAAW,GAAG,sCAAd;AACAC,EAAAA,cAAc,GAAG,iDAAjB;AACH,CAHI,MAIA,IAAIC,QAAQ,KAAK,YAAb,IAA6BA,QAAQ,KAAK,gBAA9C,EAAgE;AACjEF,EAAAA,WAAW,GAAG,qBAAd;AACAC,EAAAA,cAAc,GAAG,8BAAjB;AACH,CAHI,MAIA;AACDD,EAAAA,WAAW,GAAG,sCAAd;AACAC,EAAAA,cAAc,GAAG,oCAAjB;AACH;;AACD,MAAMI,OAAO,GAAG;AACZ,kBAAgB,kBADJ,CAEZ;;AAFY,CAAhB;AAIA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC3B,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA,gBAAQA,IAAI,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,OAAO,EAAED,IAAI,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEF,IAAI,CAACG;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAM,MAAA,GAAG,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAEV,WAAW,GAAGO,IAAI,CAACI;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAM,MAAA,QAAQ,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEX,WAAW,GAAGO,IAAI,CAACI;AAApD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAM,MAAA,QAAQ,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAEJ,IAAI,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAM,MAAA,QAAQ,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAEF,IAAI,CAACG;AAA9C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAyB,MAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAM,MAAA,QAAQ,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAEH,IAAI,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAM,MAAA,QAAQ,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAEL,IAAI,CAACM;AAAxC;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;AACD,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,SAAOf,WAAW,GAAGe,IAArB;AACH;AACD,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuC;AAC1C;AACA,MAAIC,EAAE,GAAG,iBAAT;AAEA,SAAOD,OAAO,CAACE,IAAR,CAAaH,MAAb,CAAP;AACH;AACD,OAAO,eAAeI,QAAf,CAAwBC,MAAxB,EAAgCC,IAAhC,EAAyD;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;AAC5D,MAAIC,CAAJ;AACAD,EAAAA,UAAU,KAAK,IAAf,GACOC,CAAC,GAAGxB,cAAc,GAAGqB,MAD5B,GAEOG,CAAC,GAAGxB,cAAc,GAAGqB,MAAjB,GAA0B,GAA1B,GAAgCE,UAF3C;AAIA,SAAOzB,KAAK,CACP2B,IADE,CACGD,CADH,EACMF,IADN,EACY;AACXlB,IAAAA,OAAO,EAAEA;AADE,GADZ,EAIFsB,IAJE,CAIIC,GAAD,IAAS;AACX,WAAOA,GAAG,CAACL,IAAX;AACH,GANE,CAAP;AAOH;AACD,OAAO,SAASM,iBAAT,CAA2BC,GAA3B,EAAgC;AACnC,QAAMC,MAAM,GAAG,8DAAf;AACA,QAAMC,KAAK,GAAGF,GAAG,CAACE,KAAJ,CAAUD,MAAV,CAAd;AAEA,SAAQC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,KAAoB,EAA9B,GACDD,KAAK,CAAC,CAAD,CADJ,GAED,IAFN;AAGH;AACD,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAAuC;AAAA,MAAbF,MAAa,uEAAJ,EAAI;;AAC1C,MAAIE,IAAI,CAACF,MAAL,GAAcA,MAAlB,EAA0B;AACtB,QAAIG,GAAG,GAAGD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkBJ,MAAlB,CAAV;AACA,WAAOG,GAAG,GAAG,KAAb;AACH,GAHD,MAIK;AACD,WAAOD,IAAP;AACH;AAEJ;AACD,OAAO,SAASG,QAAT,CAAkBR,GAAlB,EAAuB;AAC1B,MAAI,CAAC,gBAAgBV,IAAhB,CAAqBU,GAArB,CAAL,EAAgC;AAC5BA,IAAAA,GAAG,GAAG,YAAYA,GAAlB;AACH;;AACD,SAAOA,GAAP;AACH;AACD,OAAO,SAASS,cAAT,CAAwBxB,IAAxB,EAAyD;AAAA,MAA3ByB,KAA2B,uEAAnB,IAAmB;AAAA,MAAbC,IAAa,uEAAN,IAAM;;AAE5D,MAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAChC,WAAOvC,cAAc,GAAG,4BAAxB;AACH,GAFD,MAGK;AACD,QAAIwC,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,EAA7B,EAAiC;AAC7B,aAAOxC,cAAc,GAAGc,IAAjB,GAAwByB,KAA/B;AACH,KAFD,MAGK;AACD,UAAIE,aAAa,CAACF,KAAD,CAAb,KAAyB,KAA7B,EAAoC;AAChC,eAAOvC,cAAc,GAAGc,IAAjB,GAAwByB,KAA/B;AACH,OAFD,MAGK;AACD,eAAOvC,cAAc,GAAGc,IAAjB,GAAwB0B,IAAxB,GAA+BD,KAAtC;AACH,OANA,CAOD;;AAEH;AAEJ;AAEJ;AACD,OAAO,SAASG,cAAT,CAAwB5B,IAAxB,EAAyD;AAAA,MAA3ByB,KAA2B,uEAAnB,IAAmB;AAAA,MAAbC,IAAa,uEAAN,IAAM;;AAE5D,MAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAChC,WAAOxC,WAAW,GAAG,gBAArB;AACH,GAFD,MAGK;AACD,QAAIyC,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,EAA7B,EAAiC;AAC7B,aAAOxC,cAAc,GAAGc,IAAjB,GAAwByB,KAA/B;AACH,KAFD,MAGK;AACD,UAAIE,aAAa,CAACF,KAAD,CAAb,KAAyB,KAA7B,EAAoC;AAChC,eAAOvC,cAAc,GAAGc,IAAjB,GAAwByB,KAA/B;AACH,OAFD,MAGK;AACD,eAAOvC,cAAc,GAAGc,IAAjB,GAAwB0B,IAAxB,GAA+BD,KAAtC;AACH,OANA,CAOD;;AAEH;AAEJ;AAEJ;AACD,OAAO,SAASE,aAAT,CAAuBE,QAAvB,EAAiC;AACpC,SAAOA,QAAQ,CAACC,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAAP;AACH;AACD,OAAO,eAAeC,OAAf,CAAuBzB,MAAvB,EAAkD;AAAA,MAAnBE,UAAmB,uEAAN,IAAM;AACrD,MAAIC,CAAJ;AACAD,EAAAA,UAAU,KAAK,IAAf,GACOC,CAAC,GAAGxB,cAAc,GAAGqB,MAD5B,GAEOG,CAAC,GAAGxB,cAAc,GAAGqB,MAAjB,GAA0B,GAA1B,GAAgCE,UAF3C;AAIA,QAAMwB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAIC,MAAJ;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC5B,CAAD,EAAI;AAC5BH,IAAAA,MAAM,EAAE,KADoB;AACb;AACfjB,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELiD,MAAAA,aAAa,EAAEN;AAFV;AAFmB,GAAJ,CAA5B;AAQA,QAAMzB,IAAI,GAAG,MAAM6B,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAOhC,IAAP;AACH","sourcesContent":["\nimport { Helmet } from \"react-helmet\";\nimport axios from \"axios\";\nlet project_url = '';\nlet project_ap_url = '';\nlet hostname = window.location.hostname;\nif (hostname === 'localhost') {\n    project_url = 'http://localhost:3000/';\n    // project_ap_url = process.env.REACT_APP_SITE_API_DOMAIN;\n    project_ap_url = \"https://lumicc.com/lumicApi/\";\n}\nelse if (hostname === 'lumicc.herosolutions.com.pk') {\n    project_url = \"https://lumicc.herosolutions.com.pk/\";\n    project_ap_url = \"https://lumicc.herosolutions.com.pk/lumicc-api/\";\n}\nelse if (hostname === 'lumicc.com' || hostname === 'www.lumicc.com') {\n    project_url = \"https://lumicc.com/\";\n    project_ap_url = \"https://lumicc.com/lumicApi/\";\n}\nelse {\n    project_url = \"https://lumicc.herosolutions.com.pk/\";\n    project_ap_url = \"https://www.lumicc.com/lumicc-api/\";\n}\nconst headers = {\n    \"Content-Type\": \"application/json\",\n    // Authorization: token,\n};\nexport function metaTags(page) {\n    return (\n        <Helmet>\n            <title>{page.page_name}</title>\n            <meta name=\"title\" content={page.meta_title} />\n            <meta name=\"description\" content={page.meta_description} />\n            <link rel=\"canonical\" href={project_url + page.page_url} />\n            <meta property=\"og:url\" content={project_url + page.page_url} />\n            <meta property=\"og:title\" content={page.meta_title} />\n            <meta property=\"og:description\" content={page.meta_description} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:site_name\" content={page.site_name} />\n            <meta property=\"og:image\" content={page.site_thumbnail} />\n\n        </Helmet>\n    )\n}\nexport function getSiteImages(path) {\n    return project_url + path;\n}\nexport function checkPattern(string, pattern) {\n    // Allow A-Z, a-z, 0-9 and underscore. Min 1 char.\n    var re = /^[a-zA-Z0-9_]+$/;\n\n    return pattern.test(string);\n}\nexport async function postData(method, data, parameters = null) {\n    let u;\n    parameters === null\n        ? (u = project_ap_url + method)\n        : (u = project_ap_url + method + \"/\" + parameters);\n\n    return axios\n        .post(u, data, {\n            headers: headers,\n        })\n        .then((res) => {\n            return res.data;\n        });\n}\nexport function getYoutubeVideoId(url) {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n\n    return (match && match[2].length === 11)\n        ? match[2]\n        : null;\n}\nexport function short_text(text, length = 25) {\n    if (text.length > length) {\n        let str = text.substring(0, length);\n        return str + \"...\";\n    }\n    else {\n        return text\n    }\n\n}\nexport function checkUrl(url) {\n    if (!/^https?:\\/\\//i.test(url)) {\n        url = 'http://' + url;\n    }\n    return url;\n}\nexport function getServerImage(path, image = null, type = null) {\n\n    if (image === null || image === '') {\n        return project_ap_url + \"assets/images/no-image.svg\";\n    }\n    else {\n        if (type == null || type === '') {\n            return project_ap_url + path + image;\n        }\n        else {\n            if (fileExtension(image) === 'svg') {\n                return project_ap_url + path + image;\n            }\n            else {\n                return project_ap_url + path + type + image;\n            }\n            // console.log(type);\n\n        }\n\n    }\n\n}\nexport function getServerVideo(path, image = null, type = null) {\n\n    if (image === null || image === '') {\n        return project_url + \"videos/404.mp4\";\n    }\n    else {\n        if (type == null || type === '') {\n            return project_ap_url + path + image;\n        }\n        else {\n            if (fileExtension(image) === 'svg') {\n                return project_ap_url + path + image;\n            }\n            else {\n                return project_ap_url + path + type + image;\n            }\n            // console.log(type);\n\n        }\n\n    }\n\n}\nexport function fileExtension(filename) {\n    return filename.split('.').pop();\n}\nexport async function getData(method, parameters = null) {\n    let u;\n    parameters === null\n        ? (u = project_ap_url + method)\n        : (u = project_ap_url + method + \"/\" + parameters);\n\n    const token = localStorage.getItem(\"token\");\n    let result;\n\n    const response = await fetch(u, {\n        method: \"get\", // or 'PUT'\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token,\n        },\n    });\n\n    const data = await response.json();\n    return data;\n}\n"]},"metadata":{},"sourceType":"module"}