{"ast":null,"code":"let project_url = '';\nlet project_ap_url = '';\nlet hostname = window.location.hostname;\n\nif (hostname === 'localhost') {\n  project_url = 'http://localhost:3000/'; // project_ap_url = process.env.REACT_APP_SITE_API_DOMAIN;\n\n  project_ap_url = \"http://localhost/lumicc/\";\n} else if (hostname === 'devalonfitness.com') {\n  project_url = \"https://devalonfitness.com/\";\n  project_ap_url = \"https://devalonfitness.com/devalon-api/\";\n} else {\n  project_url = \"https://devalon.herosolutions.com.pk/\";\n  project_ap_url = \"https://devalonfitness.com/devalon-api/\";\n}\n\nexport function getSiteImages(path) {\n  return project_url + path;\n}\nexport function getYoutubeVideoId(url) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[2].length === 11 ? match[2] : null;\n}\nexport function short_text(text) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 25;\n\n  if (text.length > length) {\n    let str = text.substring(0, length);\n    return str + \"...\";\n  } else {\n    return text;\n  }\n}\nexport function checkUrl(url) {\n  if (!/^https?:\\/\\//i.test(url)) {\n    url = 'http://' + url;\n  }\n\n  return url;\n}\nexport function getServerImage(path) {\n  let image = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (image === null || image === '') {\n    return project_ap_url + \"assets/images/no-image.svg\";\n  } else {\n    if (type == null || type === '') {\n      return project_ap_url + path + image;\n    } else {\n      if (fileExtension(image) === 'svg') {\n        return project_ap_url + path + image;\n      } else {\n        return project_ap_url + path + type + image;\n      } // console.log(type);\n\n    }\n  }\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/lumicc/lumicc/src/helpers/api.jsx"],"names":["project_url","project_ap_url","hostname","window","location","getSiteImages","path","getYoutubeVideoId","url","regExp","match","length","short_text","text","str","substring","checkUrl","test","getServerImage","image","type","fileExtension"],"mappings":"AAAA,IAAIA,WAAW,GAAG,EAAlB;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAA/B;;AACA,IAAIA,QAAQ,KAAK,WAAjB,EAA8B;AAC1BF,EAAAA,WAAW,GAAG,wBAAd,CAD0B,CAE1B;;AACAC,EAAAA,cAAc,GAAG,0BAAjB;AACH,CAJD,MAKK,IAAIC,QAAQ,KAAK,oBAAjB,EAAuC;AACxCF,EAAAA,WAAW,GAAG,6BAAd;AACAC,EAAAA,cAAc,GAAG,yCAAjB;AACH,CAHI,MAIA;AACDD,EAAAA,WAAW,GAAG,uCAAd;AACAC,EAAAA,cAAc,GAAG,yCAAjB;AACH;;AAED,OAAO,SAASI,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,SAAON,WAAW,GAAGM,IAArB;AACH;AACD,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AACnC,QAAMC,MAAM,GAAG,8DAAf;AACA,QAAMC,KAAK,GAAGF,GAAG,CAACE,KAAJ,CAAUD,MAAV,CAAd;AAEA,SAAQC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,MAAT,KAAoB,EAA9B,GACDD,KAAK,CAAC,CAAD,CADJ,GAED,IAFN;AAGH;AACD,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAAuC;AAAA,MAAbF,MAAa,uEAAJ,EAAI;;AAC1C,MAAIE,IAAI,CAACF,MAAL,GAAcA,MAAlB,EAA0B;AACtB,QAAIG,GAAG,GAAGD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkBJ,MAAlB,CAAV;AACA,WAAOG,GAAG,GAAG,KAAb;AACH,GAHD,MAIK;AACD,WAAOD,IAAP;AACH;AAEJ;AACD,OAAO,SAASG,QAAT,CAAkBR,GAAlB,EAAuB;AAC1B,MAAI,CAAC,gBAAgBS,IAAhB,CAAqBT,GAArB,CAAL,EAAgC;AAC5BA,IAAAA,GAAG,GAAG,YAAYA,GAAlB;AACH;;AACD,SAAOA,GAAP;AACH;AACD,OAAO,SAASU,cAAT,CAAwBZ,IAAxB,EAAyD;AAAA,MAA3Ba,KAA2B,uEAAnB,IAAmB;AAAA,MAAbC,IAAa,uEAAN,IAAM;;AAE5D,MAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAChC,WAAOlB,cAAc,GAAG,4BAAxB;AACH,GAFD,MAGK;AACD,QAAImB,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,EAA7B,EAAiC;AAC7B,aAAOnB,cAAc,GAAGK,IAAjB,GAAwBa,KAA/B;AACH,KAFD,MAGK;AACD,UAAIE,aAAa,CAACF,KAAD,CAAb,KAAyB,KAA7B,EAAoC;AAChC,eAAOlB,cAAc,GAAGK,IAAjB,GAAwBa,KAA/B;AACH,OAFD,MAGK;AACD,eAAOlB,cAAc,GAAGK,IAAjB,GAAwBc,IAAxB,GAA+BD,KAAtC;AACH,OANA,CAOD;;AAEH;AAEJ;AAEJ","sourcesContent":["let project_url = '';\nlet project_ap_url = '';\nlet hostname = window.location.hostname;\nif (hostname === 'localhost') {\n    project_url = 'http://localhost:3000/';\n    // project_ap_url = process.env.REACT_APP_SITE_API_DOMAIN;\n    project_ap_url = \"http://localhost/lumicc/\";\n}\nelse if (hostname === 'devalonfitness.com') {\n    project_url = \"https://devalonfitness.com/\";\n    project_ap_url = \"https://devalonfitness.com/devalon-api/\";\n}\nelse {\n    project_url = \"https://devalon.herosolutions.com.pk/\";\n    project_ap_url = \"https://devalonfitness.com/devalon-api/\";\n}\n\nexport function getSiteImages(path) {\n    return project_url + path;\n}\nexport function getYoutubeVideoId(url) {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n\n    return (match && match[2].length === 11)\n        ? match[2]\n        : null;\n}\nexport function short_text(text, length = 25) {\n    if (text.length > length) {\n        let str = text.substring(0, length);\n        return str + \"...\";\n    }\n    else {\n        return text\n    }\n\n}\nexport function checkUrl(url) {\n    if (!/^https?:\\/\\//i.test(url)) {\n        url = 'http://' + url;\n    }\n    return url;\n}\nexport function getServerImage(path, image = null, type = null) {\n\n    if (image === null || image === '') {\n        return project_ap_url + \"assets/images/no-image.svg\";\n    }\n    else {\n        if (type == null || type === '') {\n            return project_ap_url + path + image;\n        }\n        else {\n            if (fileExtension(image) === 'svg') {\n                return project_ap_url + path + image;\n            }\n            else {\n                return project_ap_url + path + type + image;\n            }\n            // console.log(type);\n\n        }\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}